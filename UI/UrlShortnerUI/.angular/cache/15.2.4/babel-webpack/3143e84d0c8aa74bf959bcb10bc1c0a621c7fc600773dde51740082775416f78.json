{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helper/validateForm';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  constructor(fb, auth, router, toast) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.auth.logIn(this.loginForm.value).subscribe({\n        next: res => {\n          this.loginForm.reset();\n          this.auth.storeToken(res.token);\n          this.router.navigate(['home']);\n        }\n      });\n    } else {\n      ValidateForm.validateAllFormField(this.loginForm);\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 30,\n  vars: 8,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"#\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"id\", \"forget\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"disabled\", \"click\"], [1, \"text-center\", \"pt-3\", \"text-muted\"], [\"id\", \"Forget\", \"routerLink\", \"/signup\", 1, \"mx-1\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8)(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, LoginComponent_small_14_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"span\", 14)(18, \"input\", 15);\n      i0.ɵɵelementStart(19, \"span\", 16);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_19_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(20, LoginComponent_small_20_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(21, \"div\", 17)(22, \"a\", 18);\n      i0.ɵɵtext(23, \"Forget Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(25, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 20);\n      i0.ɵɵtext(27, \"Stil dont have account?\");\n      i0.ɵɵelementStart(28, \"a\", 21);\n      i0.ɵɵtext(29, \"Sign up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;AAGhF,OAAOC,YAAY,MAAM,6BAA6B;;;;;;;;;ICYtCC,iCAAsH;IAAAA,oCAAoB;IAAAA,iBAAQ;;;;;IAQlJA,iCAAsH;IAAAA,oCAAoB;IAAAA,iBAAQ;;;ADZlK,OAAM,MAAOC,cAAc;EAOzBC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,EAAE,CAACC,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAE,YAAoBL,EAAe,EACzBM,IAAiB,EACjBC,MAAc,EACdC,KAAoB;IAHV,OAAE,GAAFR,EAAE;IACZ,SAAI,GAAJM,IAAI;IACJ,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IAff,SAAI,GAAW,UAAU;IACzB,WAAM,GAAY,KAAK;IACvB,YAAO,GAAW,cAAc;EAehC;EAEAC,YAAY;IACV,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC1B,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAACA,OAAO,GAAG,cAAc;IACrE,IAAI,CAACD,MAAM,GAAG,IAAI,CAACE,IAAI,GAAG,MAAM,GAAG,IAAI,CAACA,IAAI,GAAG,UAAU;EAC3D;EAEAC,OAAO;IACL,IAAI,IAAI,CAACd,SAAS,CAACe,KAAK,EAAC;MACvB,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC,IAAI,CAAChB,SAAS,CAACiB,KAAK,CAAC,CACpCC,SAAS,CACR;QACEC,IAAI,EAAGC,GAAG,IAAI;UACZ,IAAI,CAACpB,SAAS,CAACqB,KAAK,EAAE;UACtB,IAAI,CAACd,IAAI,CAACe,UAAU,CAACF,GAAG,CAACG,KAAK,CAAC;UAC/B,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;QAChC;OACD,CACF;KACF,MAAK;MACJ5B,YAAY,CAAC6B,oBAAoB,CAAC,IAAI,CAACzB,SAAS,CAAC;;EAEnD;;AA1CSF,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BjC,8BAAmB;MAM6BA,qBAAK;MAAAA,iBAAK;MAE9CA,8BAA4B;MAIpBA,4BAAoC;MAEtCA,iBAAM;MAERA,sEAAkJ;MAClJA,+BAA6B;MAEzBA,4BAAoC;MAEpCA,iCAAsD;MAAhDA;QAAA,OAASkC,kBAAc;MAAA,EAAC;MAAwBlC,iBAAO;MAGjEA,sEAAkJ;MAClJA,gCAAiC;MACUA,iCAAgB;MAAAA,iBAAI;MAE/DA,mCAAsH;MAA9GA;QAAA,OAASkC,aAAS;MAAA,EAAC;MAA2FlC,sBAAK;MAAAA,iBAAS;MACpIA,gCAAyC;MAAAA,wCAAuB;MAAAA,8BAAiD;MAAAA,wBAAO;MAAAA,iBAAI;;;MApBxHA,eAAuB;MAAvBA,yCAAuB;MAOnBA,eAAwF;MAAxFA,iHAAwF;MAI1DA,eAAa;MAAbA,+BAAa;MAChBA,eAAsB;MAAtBA,iDAAsB;MAGjDA,eAAwF;MAAxFA,iHAAwF;MAIpEA,eAA8B;MAA9BA,gDAA8B","names":["Validators","ValidateForm","i0","LoginComponent","ngOnInit","loginForm","fb","group","username","required","password","constructor","auth","router","toast","hideShowPass","isText","eyeIcon","type","onLogin","valid","logIn","value","subscribe","next","res","reset","storeToken","token","navigate","validateAllFormField","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\components\\login\\login.component.ts","F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport ValidateForm from 'src/app/helper/validateForm';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  type: string = \"password\";\n  isText: boolean = false;\n  eyeIcon: string = \"fa-eye-slash\";\n  loginForm!: FormGroup;\n\n  ngOnInit(): void{\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  constructor(private fb: FormBuilder, \n    private auth: AuthService, \n    private router: Router, \n    private toast: ToastrService) { \n\n  }\n\n  hideShowPass(){\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n\n  onLogin(){\n    if (this.loginForm.valid){\n      this.auth.logIn(this.loginForm.value)\n      .subscribe(\n        {\n          next: (res) => {\n            this.loginForm.reset();\n            this.auth.storeToken(res.token);\n            this.router.navigate(['home']);\n          }\n        }\n      )\n    } else{\n      ValidateForm.validateAllFormField(this.loginForm)\n      }\n    }\n}","<div class=\"outer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"#\">\n          <div class=\"panel border bg-white\">\n            <div class=\"panel-heading\">\n              <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n            </div>\n            <div class=\"panel-body p-3\">\n              <form [formGroup]=\"loginForm\">\n                <div class=\"form-group pt-3\">\n                  <div class=\"input-field\">\n                    <span class=\"fa fa-user p-2\"></span>\n                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                  </div>\n                </div>\n                <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required', 'username')\" class=\"text-danger\">Username is required</small>\n                <div class=\"form-group pt-3\">\n                  <div class=\"input-field\">\n                    <span class=\"fa fa-lock p-2\"></span>\n                    <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                    <span (click)=\"hideShowPass()\" class=\"fa {{eyeIcon}}\"></span>\n                  </div>\n                </div>\n                <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required', 'password')\" class=\"text-danger\">Password is required</small>\n                <div class=\"form-inline fr mt-4\">\n                  <a id=\"forget\" class=\"font-weight-bold \">Forget Password?</a>\n                </div>\n                <button (click)=\"onLogin()\" [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\n                <div class=\"text-center pt-3 text-muted\">Stil dont have account?<a class=\"mx-1\" id=\"Forget\" routerLink=\"/signup\">Sign up</a></div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}