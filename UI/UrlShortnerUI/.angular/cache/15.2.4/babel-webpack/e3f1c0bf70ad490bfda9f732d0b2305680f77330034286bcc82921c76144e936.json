{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"https://localhost:7026/urls/\";\n    this.headers = new HttpHeaders().set('Access-Control-Request-Method', 'POST');\n    this.options = {\n      withCredentials: true\n    };\n    this._refresh$ = new Subject();\n  }\n  get Refresh$() {\n    return this._refresh$;\n  }\n  getShortenedUrls() {\n    return this.http.get(this.baseUrl);\n  }\n  deleteShortenedUrl(id) {\n    return this.http.delete(this.baseUrl + id);\n  }\n  getShortenedUrl(id) {\n    return this.http.get(this.baseUrl + id);\n  }\n  addUrl(urlToAdd) {\n    console.log(urlToAdd);\n    this.http.post(this.baseUrl, urlToAdd);\n    // .pipe(\n    //   tap({\n    //     next: () => {\n    //       console.log(1)\n    //       this._refresh$.next();\n    //     },\n    //     error: (e) => {\n    //       console.log('error');\n    //     }\n    //   })\n    // );\n    console.log(urlToAdd);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAgCA,WAAW,QAAQ,sBAAsB;AAGzE,SAAqBC,OAAO,QAAa,MAAM;;;AAK/C,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAW,8BAA8B;IAIxD,YAAO,GAAG,IAAIJ,WAAW,EAAE,CAACK,GAAG,CAAC,+BAA+B,EAAE,MAAM,CAAC;IACxE,YAAO,GAAG;MAAEC,eAAe,EAAE;IAAI,CAAE;IAE3B,cAAS,GAAG,IAAIL,OAAa;EALG;EAOxC,IAAIM,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS;EACvB;EAEAC,gBAAgB;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAkB,IAAI,CAACC,OAAO,CAAC;EACrD;EAEAC,kBAAkB,CAACC,EAAS;IAC1B,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAAC,IAAI,CAACH,OAAO,GAACE,EAAE,CAAC;EAC1C;EAEAE,eAAe,CAACF,EAAS;IACvB,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAgB,IAAI,CAACC,OAAO,GAACE,EAAE,CAAC;EACtD;EAEAG,MAAM,CAACC,QAAa;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAI,CAACb,IAAI,CAACgB,IAAI,CAAM,IAAI,CAACT,OAAO,EAAEM,QAAQ,CAAC;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACvB;;AA1CWf,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAmB,SAAVnB,UAAU;EAAAoB,YAFT;AAAM","names":["HttpHeaders","Subject","ApiService","constructor","http","set","withCredentials","Refresh$","_refresh$","getShortenedUrls","get","baseUrl","deleteShortenedUrl","id","delete","getShortenedUrl","addUrl","urlToAdd","console","log","post","factory","providedIn"],"sourceRoot":"","sources":["F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ShortenedUrls } from '../models/ShortenedUrl';\nimport { Observable, Subject, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private baseUrl: string = \"https://localhost:7026/urls/\";\n  \n  constructor(private http: HttpClient) { }\n\n  headers = new HttpHeaders().set('Access-Control-Request-Method', 'POST');\n  options = { withCredentials: true };\n\n  private _refresh$ = new Subject<void>;\n\n  get Refresh$(){\n    return this._refresh$;\n  }\n  \n  getShortenedUrls(): Observable<ShortenedUrls[]>{\n    return this.http.get<ShortenedUrls[]>(this.baseUrl);\n  }\n\n  deleteShortenedUrl(id:string){\n    return this.http.delete(this.baseUrl+id);\n  }\n\n  getShortenedUrl(id:string){\n    return this.http.get<ShortenedUrls>(this.baseUrl+id);\n  }\n\n  addUrl(urlToAdd: any){\n    console.log(urlToAdd)\n    this.http.post<any>(this.baseUrl, urlToAdd)\n    // .pipe(\n    //   tap({\n    //     next: () => {\n    //       console.log(1)\n    //       this._refresh$.next();\n    //     },\n    //     error: (e) => {\n    //       console.log('error');\n    //     }\n    //   })\n    // );\n\n    console.log(urlToAdd)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}