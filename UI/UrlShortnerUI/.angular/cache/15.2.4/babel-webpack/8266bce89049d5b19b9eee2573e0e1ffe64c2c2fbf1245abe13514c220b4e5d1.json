{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AboutComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction AboutComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AboutComponent_ng_template_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.logInRedirect());\n    });\n    i0.ɵɵtext(1, \"Log in\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AboutComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AboutComponent_ng_template_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.logOut());\n    });\n    i0.ɵɵtext(1, \"Sign out\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AboutComponent {\n  constructor(auth, toast, router) {\n    this.auth = auth;\n    this.toast = toast;\n    this.router = router;\n    // could be easily obtained from web api\n    this.description = \"Algorithm: on serverside each url gets GUID(globally unique identifier) after this you can navigete throw /navigate/ endpoint just with eding shortened site guid.\";\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      description: new FormControl(this.description)\n    });\n    this.form.get('description')?.valueChanges.subscribe(res => {\n      this.description = res.description;\n    });\n  }\n  onSubmit() {\n    this.description = this.form.value.description;\n  }\n  isAdmin() {\n    return this.auth.isAdmin();\n  }\n  logOut() {\n    this.auth.signOut();\n  }\n  isVisible(urlObj) {\n    if (this.isAuthorized()) {\n      return this.isAdmin();\n    }\n    return false;\n  }\n  isAuthorized() {\n    return this.auth.isLoggedIn();\n  }\n  logInRedirect() {\n    this.router.navigate(['login']);\n  }\n  toAbout() {\n    this.router.navigate(['about']);\n    ;\n  }\n  toHome() {\n    this.router.navigate(['home']);\n  }\n}\nAboutComponent.ɵfac = function AboutComponent_Factory(t) {\n  return new (t || AboutComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAboutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AboutComponent,\n  selectors: [[\"app-about\"]],\n  decls: 29,\n  vars: 6,\n  consts: [[1, \"outer\"], [1, \"container-home\"], [1, \"mb-2\", \"pt-2\"], [1, \"nav\"], [1, \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"nav-item\", \"d-inline-flex\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"loginButton\", \"\"], [\"signoutButton\", \"\"], [1, \"container\"], [1, \"project-description\", \"text-center\"], [1, \"container\", \"wrapper-about\"], [1, \"wrapper-about\"], [1, \"container-about-form\", 3, \"hidden\"], [1, \"row\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"description\", 1, \"about-form\"]],\n  template: function AboutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"nav\", 2)(3, \"ul\", 3)(4, \"li\", 4)(5, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AboutComponent_Template_button_click_5_listener() {\n        return ctx.toHome();\n      });\n      i0.ɵɵtext(6, \"About\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"li\", 4)(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AboutComponent_Template_button_click_8_listener() {\n        return ctx.toAbout();\n      });\n      i0.ɵɵtext(9, \"About\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"li\", 6);\n      i0.ɵɵtemplate(11, AboutComponent_div_11_Template, 1, 0, \"div\", 7);\n      i0.ɵɵtemplate(12, AboutComponent_ng_template_12_Template, 2, 0, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(14, AboutComponent_ng_template_14_Template, 2, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"div\", 11)(18, \"h1\");\n      i0.ɵɵtext(19, \"About\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 12)(21, \"h4\", 13);\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 14)(24, \"div\", 15)(25, \"form\", 16);\n      i0.ɵɵlistener(\"ngSubmit\", function AboutComponent_Template_form_ngSubmit_25_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelement(26, \"textarea\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AboutComponent_Template_button_click_27_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(28, \"Save\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(13);\n      const _r3 = i0.ɵɵreference(15);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.isAuthorized())(\"ngIfThen\", _r3)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate(ctx.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", !ctx.isAdmin());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\".container-about-form[_ngcontent-%COMP%]{\\r\\n    color: black; \\r\\n    opacity: 1; \\r\\n    resize: none; \\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.about-form[_ngcontent-%COMP%]{\\r\\n    background-color: white;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\nnav[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  justify-content: right;\\r\\n  padding-right: 200px;\\r\\n}\\r\\n\\r\\n.box-shadow-none[_ngcontent-%COMP%]{\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\n.container-home-main[_ngcontent-%COMP%]{\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.container-width[_ngcontent-%COMP%]{\\r\\n  width: 500px;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%]{\\r\\n    max-width: 500px;\\r\\n}\\r\\n\\r\\n.wrapper-about[_ngcontent-%COMP%]{\\r\\n  max-width: 500px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7SUFDVixZQUFZO0lBQ1osV0FBVztBQUNmOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7RUFDYjs7QUFFRjtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXItYWJvdXQtZm9ybXtcclxuICAgIGNvbG9yOiBibGFjazsgXHJcbiAgICBvcGFjaXR5OiAxOyBcclxuICAgIHJlc2l6ZTogbm9uZTsgXHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmFib3V0LWZvcm17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG5uYXZ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG4uYm94LXNoYWRvdy1ub25le1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuXHJcbi5jb250YWluZXItaG9tZS1tYWlue1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uY29udGFpbmVyLXdpZHRoe1xyXG4gIHdpZHRoOiA1MDBweDtcclxufVxyXG5cclxuLmNhcmR7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG59XHJcblxyXG4ud3JhcHBlci1hYm91dHtcclxuICBtYXgtd2lkdGg6IDUwMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;;;;ICO3CC,sBAAuE;;;;;;IAGrEA,iCAA0D;IAAlDA;MAAAA;MAAA;MAAA,OAASA,qCAAe;IAAA,EAAC;IAAyBA,sBAAM;IAAAA,iBAAS;;;;;;IAIzEA,iCAAmD;IAA3CA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAAyBA,wBAAQ;IAAAA,iBAAS;;;ADNlF,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAiB,EAAUC,KAAoB,EAAUC,MAAc;IAAvE,SAAI,GAAJF,IAAI;IAAuB,UAAK,GAALC,KAAK;IAAyB,WAAM,GAANC,MAAM;IAHnF;IACA,gBAAW,GAAW,oKAAoK;EAE7F;EAE7FC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIR,SAAS,CAAC;MACxBS,WAAW,EAAE,IAAIV,WAAW,CAAC,IAAI,CAACU,WAAW;KAC9C,CAAC;IAEF,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,aAAa,CAAC,EAAEC,YAAY,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC3D,IAAI,CAACJ,WAAW,GAAGI,GAAG,CAACJ,WAAW;IACpC,CAAC,CAAC;EACJ;EAEAK,QAAQ;IACN,IAAI,CAACL,WAAW,GAAG,IAAI,CAACD,IAAI,CAACO,KAAK,CAACN,WAAW;EAChD;EAEAO,OAAO;IACL,OAAO,IAAI,CAACZ,IAAI,CAACY,OAAO,EAAE;EAC5B;EAEAC,MAAM;IACJ,IAAI,CAACb,IAAI,CAACc,OAAO,EAAE;EACrB;EAEAC,SAAS,CAACC,MAAW;IACnB,IAAI,IAAI,CAACC,YAAY,EAAE,EAAE;MACvB,OAAO,IAAI,CAACL,OAAO,EAAE;;IAEvB,OAAO,KAAK;EACd;EAEAK,YAAY;IACV,OAAO,IAAI,CAACjB,IAAI,CAACkB,UAAU,EAAE;EAC/B;EAEAC,aAAa;IACX,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,OAAO;IACL,IAAI,CAACnB,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAAC;EAClC;EAEAE,MAAM;IACJ,IAAI,CAACpB,MAAM,CAACkB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EAChC;;AAlDWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3B9B,8BAAmB;MAK6BA;QAAA,OAAS+B,YAAQ;MAAA,EAAC;MAAC/B,qBAAK;MAAAA,iBAAS;MAEvEA,6BAAa;MACqBA;QAAA,OAAS+B,aAAS;MAAA,EAAC;MAAC/B,qBAAK;MAAAA,iBAAS;MAEpEA,8BAAmC;MACjCA,iEAAuE;MAEvEA,kHAEc;MAEdA,kHAEc;MAEhBA,iBAAK;MAGXA,gCAAuB;MAEXA,sBAAK;MAAAA,iBAAK;MACdA,gCAAqC;MACPA,aAAiB;MAAAA,iBAAK;MAEpDA,gCAAwD;MAEvBA;QAAA,OAAY+B,cAAU;MAAA,EAAC;MAC5C/B,gCAAsE;MAC1EA,iBAAO;MACPA,kCAAqD;MAA7CA;QAAA,OAAS+B,cAAU;MAAA,EAAC;MAAyB/B,qBAAI;MAAAA,iBAAS;;;;;MAxBpEA,gBAAsB;MAAtBA,yCAAsB;MAiBEA,gBAAiB;MAAjBA,qCAAiB;MAEbA,eAAqB;MAArBA,uCAAqB;MAEzCA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","FormGroup","i0","AboutComponent","constructor","auth","toast","router","ngOnInit","form","description","get","valueChanges","subscribe","res","onSubmit","value","isAdmin","logOut","signOut","isVisible","urlObj","isAuthorized","isLoggedIn","logInRedirect","navigate","toAbout","toHome","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\components\\about\\about.component.ts","F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\components\\about\\about.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NgModule } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  // could be easily obtained from web api\n  description: string = \"Algorithm: on serverside each url gets GUID(globally unique identifier) after this you can navigete throw /navigate/ endpoint just with eding shortened site guid.\";\n  form!: FormGroup;\n  constructor(private auth: AuthService, private toast: ToastrService, private router: Router){}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      description: new FormControl(this.description)\n    });\n\n    this.form.get('description')?.valueChanges.subscribe((res) =>{\n      this.description = res.description;\n    });\n  }\n\n  onSubmit(){\n    this.description = this.form.value.description;\n  }\n\n  isAdmin(): boolean{\n    return this.auth.isAdmin();\n  }\n\n  logOut() {\n    this.auth.signOut();\n  }\n\n  isVisible(urlObj: any) {\n    if (this.isAuthorized()) {\n      return this.isAdmin();\n    }\n    return false;\n  }\n\n  isAuthorized(): boolean {\n    return this.auth.isLoggedIn();\n  }\n\n  logInRedirect() {\n    this.router.navigate(['login']);\n  }\n\n  toAbout(){\n    this.router.navigate(['about']);;\n  }\n\n  toHome(){\n    this.router.navigate(['home']);\n  }\n}\n","<div class=\"outer\">\n    <div class=\"container-home\">\n      <nav class=\"mb-2 pt-2\">\n        <ul class=\"nav\">\n            <li class=\"\">\n                <button class=\"btn btn-primary\" (click)=\"toHome()\">About</button>\n            </li>\n          <li class=\"\">\n            <button class=\"btn btn-primary\" (click)=\"toAbout()\">About</button>\n          </li>\n          <li class=\"nav-item d-inline-flex\">\n            <div *ngIf=\"isAuthorized(); then signoutButton else loginButton\"></div>\n      \n            <ng-template #loginButton>\n              <button (click)=\"logInRedirect()\" class=\"btn btn-primary\">Log in</button>\n            </ng-template>\n      \n            <ng-template #signoutButton>\n              <button (click)=\"logOut()\" class=\"btn btn-primary\">Sign out</button>\n            </ng-template>\n      \n          </li>\n        </ul>\n      </nav>\n    <div class=\"container\">\n        <div class=\"project-description text-center\">\n            <h1>About</h1>\n            <div class=\"container wrapper-about\">\n                <h4 class=\"wrapper-about\">{{ description }}</h4>\n            </div>\n            <div class=\"container-about-form\" [hidden]=\"!isAdmin()\">\n                <div class=\"row\">\n                    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                        <textarea class=\"about-form\" formControlName=\"description\"></textarea>\n                    </form>\n                    <button (click)=\"onSubmit()\" class=\"btn btn-primary\">Save</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}