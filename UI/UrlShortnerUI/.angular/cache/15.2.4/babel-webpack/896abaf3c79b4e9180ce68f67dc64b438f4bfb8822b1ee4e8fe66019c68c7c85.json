{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AboutComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction AboutComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AboutComponent_ng_template_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.logInRedirect());\n    });\n    i0.ɵɵtext(1, \"Log in\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AboutComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AboutComponent_ng_template_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.logOut());\n    });\n    i0.ɵɵtext(1, \"Sign out\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AboutComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AboutComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onSubmit());\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AboutComponent {\n  constructor(auth, toast, router) {\n    this.auth = auth;\n    this.toast = toast;\n    this.router = router;\n    // could be easily obtained from web api\n    this.description = \"tyty\";\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      description: new FormControl(this.description)\n    });\n    this.form.get('description')?.valueChanges.subscribe(res => {\n      this.description = res;\n    });\n    if (!this.isAdmin()) {\n      this.form.get('description')?.disable();\n    }\n  }\n  onSubmit() {\n    this.description = this.form.value;\n  }\n  isAdmin() {\n    return this.auth.isAdmin();\n  }\n  logOut() {\n    this.auth.signOut();\n  }\n  isVisible(urlObj) {\n    if (this.isAuthorized()) {\n      return this.isAdmin();\n    }\n    return false;\n  }\n  isAuthorized() {\n    return this.auth.isLoggedIn();\n  }\n  logInRedirect() {\n    this.router.navigate(['login']);\n  }\n  toAbout() {\n    this.router.navigate(['about']);\n    ;\n  }\n}\nAboutComponent.ɵfac = function AboutComponent_Factory(t) {\n  return new (t || AboutComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAboutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AboutComponent,\n  selectors: [[\"app-about\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"outer\"], [1, \"bg-dark-subtle\", \"mb-5\"], [1, \"nav\", \"justify-content-end\"], [1, \"nav-item\", \"d-inline-flex\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"loginButton\", \"\"], [\"signoutButton\", \"\"], [1, \"container\"], [1, \"project-description\"], [1, \"container-about-form\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"description\", 2, \"background\", \"white\", \"color\", \"black\", \"opacity\", \"1\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"]],\n  template: function AboutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\", 1)(2, \"ul\", 2)(3, \"li\", 3)(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function AboutComponent_Template_button_click_4_listener() {\n        return ctx.toAbout();\n      });\n      i0.ɵɵtext(5, \"About\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"li\", 3);\n      i0.ɵɵtemplate(7, AboutComponent_div_7_Template, 1, 0, \"div\", 5);\n      i0.ɵɵtemplate(8, AboutComponent_ng_template_8_Template, 2, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(10, AboutComponent_ng_template_10_Template, 2, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9)(14, \"h2\");\n      i0.ɵɵtext(15, \"Project Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"form\", 11);\n      i0.ɵɵlistener(\"ngSubmit\", function AboutComponent_Template_form_ngSubmit_17_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelement(18, \"textarea\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, AboutComponent_button_19_Template, 2, 0, \"button\", 13);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n      const _r3 = i0.ɵɵreference(11);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.isAuthorized())(\"ngIfThen\", _r3)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isAdmin());\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\".disabled[_ngcontent-%COMP%]{\\r\\n    opacity: 1;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hYm91dC9hYm91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmRpc2FibGVke1xyXG4gICAgb3BhY2l0eTogMTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;;;;ICG3CC,sBAAuE;;;;;;IAGnEA,iCAA0D;IAAlDA;MAAAA;MAAA;MAAA,OAASA,qCAAe;IAAA,EAAC;IAAyBA,sBAAM;IAAAA,iBAAS;;;;;;IAIzEA,iCAAmD;IAA3CA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAAyBA,wBAAQ;IAAAA,iBAAS;;;;;;IAapEA,iCAAuE;IAA/DA;MAAAA;MAAA;MAAA,OAASA,iCAAU;IAAA,EAAC;IAA2CA,oBAAI;IAAAA,iBAAS;;;ADfpG,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAiB,EAAUC,KAAoB,EAAUC,MAAc;IAAvE,SAAI,GAAJF,IAAI;IAAuB,UAAK,GAALC,KAAK;IAAyB,WAAM,GAANC,MAAM;IAHnF;IACA,gBAAW,GAAW,MAAM;EAEiE;EAE7FC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIR,SAAS,CAAC;MACxBS,WAAW,EAAE,IAAIV,WAAW,CAAC,IAAI,CAACU,WAAW;KAC9C,CAAC;IAEF,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,aAAa,CAAC,EAAEC,YAAY,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC3D,IAAI,CAACJ,WAAW,GAAGI,GAAG;IACxB,CAAC,CAAC;IAEF,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE,EAAC;MAClB,IAAI,CAACN,IAAI,CAACE,GAAG,CAAC,aAAa,CAAC,EAAEK,OAAO,EAAE;;EAE3C;EAEAC,QAAQ;IACN,IAAI,CAACP,WAAW,GAAG,IAAI,CAACD,IAAI,CAACS,KAAK;EACpC;EAEAH,OAAO;IACL,OAAO,IAAI,CAACV,IAAI,CAACU,OAAO,EAAE;EAC5B;EAEAI,MAAM;IACJ,IAAI,CAACd,IAAI,CAACe,OAAO,EAAE;EACrB;EAEAC,SAAS,CAACC,MAAW;IACnB,IAAI,IAAI,CAACC,YAAY,EAAE,EAAE;MACvB,OAAO,IAAI,CAACR,OAAO,EAAE;;IAEvB,OAAO,KAAK;EACd;EAEAQ,YAAY;IACV,OAAO,IAAI,CAAClB,IAAI,CAACmB,UAAU,EAAE;EAC/B;EAEAC,aAAa;IACX,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,OAAO;IACL,IAAI,CAACpB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAAC;EAClC;;AAlDWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3B9B,8BAAmB;MAIwBA;QAAA,OAAS+B,aAAS;MAAA,EAAC;MAAC/B,qBAAK;MAAAA,iBAAS;MAEnEA,6BAAmC;MACjCA,+DAAuE;MAErEA,gHAEc;MAEdA,kHAEc;MAElBA,iBAAK;MAGXA,+BAAuB;MAEXA,oCAAmB;MAAAA,iBAAK;MAC5BA,gCAAkC;MACLA;QAAA,OAAY+B,cAAU;MAAA,EAAC;MAC5C/B,gCAAwG;MAC5GA,iBAAO;MACPA,wEAAoF;MACxFA,iBAAM;;;;;MArBAA,eAAsB;MAAtBA,yCAAsB;MAiBlBA,gBAAkB;MAAlBA,oCAAkB;MAGMA,eAAe;MAAfA,oCAAe","names":["FormControl","FormGroup","i0","AboutComponent","constructor","auth","toast","router","ngOnInit","form","description","get","valueChanges","subscribe","res","isAdmin","disable","onSubmit","value","logOut","signOut","isVisible","urlObj","isAuthorized","isLoggedIn","logInRedirect","navigate","toAbout","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\components\\about\\about.component.ts","F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\components\\about\\about.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NgModule } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  // could be easily obtained from web api\n  description: string = \"tyty\";\n  form!: FormGroup;\n  constructor(private auth: AuthService, private toast: ToastrService, private router: Router){}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      description: new FormControl(this.description)\n    });\n\n    this.form.get('description')?.valueChanges.subscribe((res) =>{\n      this.description = res;\n    });\n\n    if (!this.isAdmin()){\n      this.form.get('description')?.disable();\n    }\n  }\n\n  onSubmit(){\n    this.description = this.form.value;\n  }\n\n  isAdmin(): boolean{\n    return this.auth.isAdmin();\n  }\n\n  logOut() {\n    this.auth.signOut();\n  }\n\n  isVisible(urlObj: any) {\n    if (this.isAuthorized()) {\n      return this.isAdmin();\n    }\n    return false;\n  }\n\n  isAuthorized(): boolean {\n    return this.auth.isLoggedIn();\n  }\n\n  logInRedirect() {\n    this.router.navigate(['login']);\n  }\n\n  toAbout(){\n    this.router.navigate(['about']);;\n  }\n}\n","<div class=\"outer\">\n    <nav class=\"bg-dark-subtle mb-5\">\n        <ul class=\"nav justify-content-end\">\n          <li class=\"nav-item d-inline-flex\">\n            <button class=\"btn btn-primary\"(click)=\"toAbout()\">About</button>\n          </li>\n          <li class=\"nav-item d-inline-flex\">\n            <div *ngIf=\"isAuthorized(); then signoutButton else loginButton\"></div>\n  \n              <ng-template #loginButton>\n                <button (click)=\"logInRedirect()\" class=\"btn btn-primary\">Log in</button>\n              </ng-template>\n  \n              <ng-template #signoutButton>\n                <button (click)=\"logOut()\" class=\"btn btn-primary\">Sign out</button>\n              </ng-template>\n              \n          </li>\n        </ul>\n      </nav>\n    <div class=\"container\">\n        <div class=\"project-description\">\n            <h2>Project Description</h2>\n            <div class=\"container-about-form\">\n                <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                    <textarea style=\"background: white; color: black; opacity: 1;\" formControlName=\"description\"></textarea>\n                </form>\n                <button (click)=\"onSubmit()\" *ngIf=\"isAdmin()\" class=\"btn btn-primary\">Save</button>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}