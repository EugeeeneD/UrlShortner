{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport ValidateForm from 'src/app/helper/validateForm';\nlet HomeComponent = class HomeComponent {\n  constructor(auth, api, fb, router) {\n    this.auth = auth;\n    this.api = api;\n    this.fb = fb;\n    this.router = router;\n    this.shortenedUrls = [];\n    this.displayedColumns = ['LongUrl', 'Shortened', 'Action'];\n  }\n  ngOnInit() {\n    this.api.Refresh$.subscribe(() => {\n      this.getUrls();\n    });\n    this.getUrls();\n    this.createUrlForm = this.fb.group({\n      Url: ['', Validators.required]\n    });\n  }\n  getUrls() {\n    this.api.getShortenedUrls().subscribe(res => {\n      this.shortenedUrls = res;\n      this.dataSource = new MatTableDataSource(this.shortenedUrls);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  logOut() {\n    this.auth.signOut();\n  }\n  addNewUrl() {\n    if (this.createUrlForm.value) {\n      this.api.addUrl(this.createUrlForm.value);\n    } else {\n      ValidateForm.validateAllFormField(this.createUrlForm);\n    }\n  }\n  deleteShortenedUrl(row) {\n    this.api.deleteShortenedUrl(row);\n  }\n  getUrlInfo(row) {\n    this.router.navigate(['url-info'], {\n      queryParams: {\n        data: JSON.stringify(row)\n      }\n    });\n  }\n  isAuthorized() {\n    return this.auth.isLoggedIn();\n  }\n  logInRedirect() {\n    this.router.navigate(['login']);\n  }\n  isVisible(urlObj) {\n    if (this.isAuthorized()) {\n      if (this.isAdminOrOwner(urlObj)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  isAdminOrOwner(urlObj) {\n    var role = this.auth.getUserRoleFromToken();\n    var id = this.auth.getUserIdFromToken();\n    if (role === \"admin\") {\n      return true;\n    }\n    if (id === urlObj.userId) {\n      return true;\n    }\n    return false;\n  }\n};\n__decorate([ViewChild(MatPaginator)], HomeComponent.prototype, \"paginator\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","Validators","MatPaginator","MatTableDataSource","ValidateForm","HomeComponent","constructor","auth","api","fb","router","ngOnInit","Refresh$","subscribe","getUrls","createUrlForm","group","Url","required","getShortenedUrls","res","shortenedUrls","dataSource","paginator","logOut","signOut","addNewUrl","value","addUrl","validateAllFormField","deleteShortenedUrl","row","getUrlInfo","navigate","queryParams","data","JSON","stringify","isAuthorized","isLoggedIn","logInRedirect","isVisible","urlObj","isAdminOrOwner","role","getUserRoleFromToken","id","getUserIdFromToken","userId","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport ValidateForm from 'src/app/helper/validateForm';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  @ViewChild(MatPaginator) paginator !: MatPaginator;\n\n  public shortenedUrls: any[] = [];\n  public observable$: any;\n  displayedColumns: string[] = ['LongUrl', 'Shortened', 'Action'];\n  dataSource: any;\n\n  createUrlForm!: FormGroup;\n\n  constructor(private auth: AuthService, private api: ApiService, private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.api.Refresh$.subscribe(() => {\n      this.getUrls()\n    })\n\n    this.getUrls();\n    this.createUrlForm = this.fb.group({\n      Url: ['', Validators.required],\n    });\n  }\n\n  private getUrls() {\n    this.api.getShortenedUrls()\n      .subscribe(res => {\n        this.shortenedUrls = res;\n        this.dataSource = new MatTableDataSource(this.shortenedUrls);\n        this.dataSource.paginator = this.paginator;\n      });\n  }\n\n  logOut() {\n    this.auth.signOut();\n  }\n\n  addNewUrl() {\n    if (this.createUrlForm.value) {\n      this.api.addUrl(this.createUrlForm.value);\n    } else {\n      ValidateForm.validateAllFormField(this.createUrlForm)\n    }\n  }\n\n  deleteShortenedUrl(row: any) {\n    this.api.deleteShortenedUrl(row);\n  }\n\n  getUrlInfo(row: any) {\n    this.router.navigate(['url-info'], { queryParams: { data: JSON.stringify(row) } });\n  }\n\n  isAuthorized(): boolean {\n    return this.auth.isLoggedIn();\n  }\n\n  logInRedirect() {\n    this.router.navigate(['login']);\n  }\n\n  isVisible(urlObj: any) {\n    if (this.isAuthorized()) {\n      if (this.isAdminOrOwner(urlObj)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isAdminOrOwner(urlObj: any) {\n    var role = this.auth.getUserRoleFromToken();\n    var id = this.auth.getUserIdFromToken();\n\n    if (role === \"admin\") {\n      return true;\n    }\n\n    if (id === urlObj.userId) {\n      return true;\n    }\n\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}