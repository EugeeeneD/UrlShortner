{"ast":null,"code":"import * as cookie from 'cookie';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = \"https://localhost:7026/api/UserAuthentication/\";\n  }\n  signUp(registerUser) {\n    return this.http.post(`${this.baseUrl}register`, registerUser);\n  }\n  logIn(loginUser) {\n    return this.http.post(`${this.baseUrl}login`, loginUser);\n  }\n  signOut() {\n    localStorage.removeItem('jwt');\n    this.router.navigate(['login']);\n  }\n  storeToken(cookies) {\n    if (cookies) {\n      const parsedCookies = cookie.parse(cookies);\n      for (const [key, value] of Object.entries(parsedCookies)) {\n        document.cookie = `${key}=${value}`;\n      }\n    }\n    //localStorage.setItem('jwt', tokenValue);\n  }\n\n  getToken() {\n    return localStorage.getItem('jwt');\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('jwt');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,OAAO,KAAKA,MAAM,MAAM,QAAQ;;;;AAKhC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAD5C,YAAO,GAAW,gDAAgD;EACV;EAEhEC,MAAM,CAACC,YAAiB;IACtB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACC,OAAO,UAAU,EAAEF,YAAY,CAAC;EACrE;EAEAG,KAAK,CAACC,SAAc;IAClB,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACC,OAAO,OAAO,EAAEE,SAAS,CAAC;EAC/D;EAEAC,OAAO;IACLC,YAAY,CAACC,UAAU,CAAC,KAAK,CAAC;IAC9B,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,UAAU,CAACC,OAAe;IACxB,IAAIA,OAAO,EAAE;MACX,MAAMC,aAAa,GAAGjB,MAAM,CAACkB,KAAK,CAACF,OAAO,CAAC;MAC3C,KAAK,MAAM,CAACG,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,aAAa,CAAC,EAAE;QACxDM,QAAQ,CAACvB,MAAM,GAAG,GAAGmB,GAAG,IAAIC,KAAK,EAAE;;;IAGvC;EACF;;EAEAI,QAAQ;IACN,OAAOZ,YAAY,CAACa,OAAO,CAAC,KAAK,CAAC;EACpC;EAEAC,UAAU;IACR,OAAO,CAAC,CAACd,YAAY,CAACa,OAAO,CAAC,KAAK,CAAC;EACtC;;AAlCWxB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA0B,SAAX1B,WAAW;EAAA2B,YAFV;AAAM","names":["cookie","AuthService","constructor","http","router","signUp","registerUser","post","baseUrl","logIn","loginUser","signOut","localStorage","removeItem","navigate","storeToken","cookies","parsedCookies","parse","key","value","Object","entries","document","getToken","getItem","isLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["F:\\UrlShortnerApi\\UI\\UrlShortnerUI\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { Router } from '@angular/router';\nimport * as cookie from 'cookie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl: string = \"https://localhost:7026/api/UserAuthentication/\";\n  constructor(private http: HttpClient, private router: Router) { }\n\n  signUp(registerUser: any){\n    return this.http.post<any>(`${this.baseUrl}register`, registerUser);\n  }\n\n  logIn(loginUser: any){\n    return this.http.post<any>(`${this.baseUrl}login`, loginUser);\n  }\n\n  signOut(){\n    localStorage.removeItem('jwt');\n    this.router.navigate(['login']);\n  }\n\n  storeToken(cookies: string){\n    if (cookies) {\n      const parsedCookies = cookie.parse(cookies);\n      for (const [key, value] of Object.entries(parsedCookies)) {\n        document.cookie = `${key}=${value}`;\n      }\n    }\n    //localStorage.setItem('jwt', tokenValue);\n  }\n\n  getToken(){\n    return localStorage.getItem('jwt');\n  }\n\n  isLoggedIn(): boolean{\n    return !!localStorage.getItem('jwt');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}